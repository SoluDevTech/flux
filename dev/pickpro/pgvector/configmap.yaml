apiVersion: v1
kind: ConfigMap
metadata:
  name: pgvector-init
  namespace: pickpro
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS "threads" (
      "id" UUID NOT NULL UNIQUE,
      "title" TEXT,
      "created_at" BIGINT,
      "user_id" TEXT,
      PRIMARY KEY("id")
    );




    CREATE TABLE IF NOT EXISTS "messages" (
      "id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
      "message" TEXT,
      "role" TEXT,
      "thread_id" UUID,
      "created_at" BIGINT,
      PRIMARY KEY("id")
    );




    CREATE TABLE IF NOT EXISTS "users" (
      "id" TEXT UNIQUE,
      "created_at" BIGINT,
      PRIMARY KEY("id")
    );




    CREATE TABLE IF NOT EXISTS "resumes" (
      "id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
      "skills" JSONB,
      "location" TEXT,
      "zipcode" INTEGER,
      "contract_types" JSONB,
      "expected_salary_min" INTEGER,
      "expected_salary_max" INTEGER,
      "expected_daily_rate" INTEGER,
      "work_mode" JSONB,
      "years_of_experience" INTEGER,
      "seniority" TEXT,
      "updated_at" BIGINT,
      "is_active" BOOLEAN,
      "job_title" TEXT,
      "lastname" TEXT,
      "firstname" TEXT,
      "phone" TEXT,
      "mail" TEXT,
      PRIMARY KEY("id")
    );


    ALTER TABLE "messages"
    ADD FOREIGN KEY("thread_id") REFERENCES "threads"("id")
    ON UPDATE NO ACTION ON DELETE CASCADE;
    ALTER TABLE "threads"
    ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
    ON UPDATE NO ACTION ON DELETE NO ACTION;

    CREATE INDEX idx_threads_user_id ON threads(user_id);
    CREATE INDEX idx_threads_created_at ON threads(created_at);
    CREATE INDEX idx_threads_user_created ON threads(user_id, created_at DESC);

    CREATE INDEX idx_messages_thread_id ON messages(thread_id);
    CREATE INDEX idx_messages_thread_created ON messages(thread_id, created_at);
    CREATE INDEX idx_messages_role ON messages(role);

    CREATE INDEX idx_users_created_at ON users(created_at);

    CREATE INDEX idx_resumes_skills ON resumes USING GIN (skills);
    CREATE INDEX idx_resumes_location ON resumes(location);
    CREATE INDEX idx_resumes_experience ON resumes(years_of_experience, seniority);
    CREATE INDEX idx_resumes_salary ON resumes(expected_salary_min, expected_salary_max);
    CREATE INDEX idx_resumes_daily_rate ON resumes(expected_daily_rate);
    CREATE INDEX idx_resumes_contract_types ON resumes USING GIN (contract_types);
    CREATE INDEX idx_resumes_work_mode ON resumes USING GIN (work_mode);
    CREATE INDEX idx_resumes_active ON resumes(is_active) WHERE is_active = true;
    CREATE INDEX idx_resumes_updated_at ON resumes(updated_at);
    CREATE INDEX idx_resumes_active_updated ON resumes(is_active, updated_at DESC) WHERE is_active = true;